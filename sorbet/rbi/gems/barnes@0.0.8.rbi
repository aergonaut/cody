# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `barnes` gem.
# Please instead update this file by running `tapioca sync`.

# typed: true

module Barnes
  class << self
    def start(interval: T.unsafe(nil), aggregation_period: T.unsafe(nil), statsd: T.unsafe(nil), panels: T.unsafe(nil)); end
  end
end

Barnes::COUNTERS = T.let(T.unsafe(nil), String)

Barnes::DEFAULT_AGGREGATION_PERIOD = T.let(T.unsafe(nil), Integer)

Barnes::DEFAULT_INTERVAL = T.let(T.unsafe(nil), Integer)

Barnes::DEFAULT_PANELS = T.let(T.unsafe(nil), Array)

Barnes::DEFAULT_STATSD = T.let(T.unsafe(nil), Symbol)

Barnes::GAUGES = T.let(T.unsafe(nil), String)

class Barnes::Panel
  def initialize; end

  def instrument(instrument); end
  def instrument!(state, counter_readings, gauge_readings); end
  def start!(state); end
end

class Barnes::Periodic
  def initialize(reporter:, sample_rate: T.unsafe(nil), debug: T.unsafe(nil), panels: T.unsafe(nil)); end

  def stop; end
end

class Barnes::Railtie < ::Rails::Railtie
end

class Barnes::Reporter
  def initialize(statsd:, sample_rate:); end

  def report(env); end
  def report_statsd(env); end
  def sample_rate; end
  def sample_rate=(_arg0); end
  def statsd; end
  def statsd=(_arg0); end
end

class Barnes::ResourceUsage < ::Barnes::Panel
  def initialize(sample_rate); end
end

Barnes::STATE = T.let(T.unsafe(nil), String)
