# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `derailed_benchmarks` gem.
# Please instead update this file by running `tapioca sync`.

# typed: true

module DerailedBenchmarks
  class << self
    def add_auth(app); end
    def auth; end
    def auth=(_arg0); end
    def gem_is_bundled?(name); end
    def rails_path_on_disk; end
  end
end

class DerailedBenchmarks::AuthHelper
  def add_app(app); end
  def app; end
  def call(env); end
  def setup; end
end

class DerailedBenchmarks::AuthHelpers
end

class DerailedBenchmarks::AuthHelpers::Devise < ::DerailedBenchmarks::AuthHelper
  def call(env); end
  def setup; end
  def user; end
  def user=(_arg0); end
end

class DerailedBenchmarks::Git
end

class DerailedBenchmarks::Git::Commit
  def initialize(path:, ref:, log_dir: T.unsafe(nil)); end

  def checkout!; end
  def desc; end
  def description; end
  def file; end
  def log; end
  def ref; end
  def short_sha; end
  def time; end

  private

  def file_safe_ref; end
end

class DerailedBenchmarks::Git::InPath
  def initialize(path); end

  def branch; end
  def checkout!(ref); end
  def description; end
  def path; end
  def run(cmd); end
  def run!(cmd); end
  def short_sha; end
  def time; end
  def time_stamp_string; end
end

class DerailedBenchmarks::Git::SwitchProject
  def initialize(path:, ref_array: T.unsafe(nil), io: T.unsafe(nil), log_dir: T.unsafe(nil)); end

  def clean?; end
  def commits; end
  def current_branch_or_sha; end
  def dirty?; end
  def restore_branch_on_return(quiet: T.unsafe(nil)); end

  private

  def expand_refs(ref_array); end
  def status(pattern: T.unsafe(nil)); end
end

class DerailedBenchmarks::RequireTree
  def initialize(name); end

  def <<(tree); end
  def [](name); end
  def children; end
  def cost; end
  def cost=(_arg0); end
  def name; end
  def parent; end
  def parent=(_arg0); end
  def print_sorted_children(level = T.unsafe(nil), out = T.unsafe(nil)); end
  def sorted_children; end
  def to_string; end

  class << self
    def reset!; end
  end
end

DerailedBenchmarks::RequireTree::REQUIRED_BY = T.let(T.unsafe(nil), Hash)

class DerailedBenchmarks::StatsForFile
  def initialize(file:, name:, time:, desc: T.unsafe(nil), short_sha: T.unsafe(nil)); end

  def average; end
  def call; end
  def desc; end
  def empty?; end
  def median; end
  def name; end
  def short_sha; end
  def time; end
  def values; end

  private

  def load_file!; end
end

class DerailedBenchmarks::StatsFromDir
  def initialize(input); end

  def align; end
  def banner(io = T.unsafe(nil)); end
  def call; end
  def change_direction; end
  def d_critical; end
  def d_max; end
  def faster?; end
  def histogram(io = T.unsafe(nil)); end
  def newest; end
  def oldest; end
  def percent_faster; end
  def significant?; end
  def statistical_test(series_1 = T.unsafe(nil), series_2 = T.unsafe(nil), confidence: T.unsafe(nil)); end
  def stats; end
  def x_faster; end
end

DerailedBenchmarks::StatsFromDir::FORMAT = T.let(T.unsafe(nil), String)
