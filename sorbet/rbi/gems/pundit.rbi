# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/pundit/all/pundit.rbi
#
# pundit-1.1.0
module Pundit
  def authorize(record, query = nil); end
  def permitted_attributes(record, action = nil); end
  def policies; end
  def policy(record); end
  def policy_scope(scope); end
  def policy_scopes; end
  def pundit_policy_authorized?; end
  def pundit_policy_scope(scope); end
  def pundit_policy_scoped?; end
  def pundit_user; end
  def self.authorize(user, record, query); end
  def self.policy!(user, record); end
  def self.policy(user, record); end
  def self.policy_scope!(user, scope); end
  def self.policy_scope(user, scope); end
  def skip_authorization; end
  def skip_policy_scope; end
  def verify_authorized; end
  def verify_policy_scoped; end
  extend ActiveSupport::Concern
end
class Pundit::PolicyFinder
  def find; end
  def find_class_name(subject); end
  def initialize(object); end
  def object; end
  def param_key; end
  def policy!; end
  def policy; end
  def scope!; end
  def scope; end
end
module Pundit::Generators
end
class Pundit::Error < StandardError
end
class Pundit::NotAuthorizedError < Pundit::Error
  def initialize(options = nil); end
  def policy; end
  def query; end
  def record; end
end
class Pundit::AuthorizationNotPerformedError < Pundit::Error
end
class Pundit::PolicyScopingNotPerformedError < Pundit::AuthorizationNotPerformedError
end
class Pundit::NotDefinedError < Pundit::Error
end
module Pundit::Helper
  def policy_scope(scope); end
end
