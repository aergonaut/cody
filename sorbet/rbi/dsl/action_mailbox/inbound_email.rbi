# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `ActionMailbox::InboundEmail`.
# Please instead update this file by running `tapioca dsl --gen ActiveRecordColumns ActiveRecordAssociations ActiveRecordScope`.

# typed: strict
module ActionMailbox
  class InboundEmail
    include ActionMailbox::InboundEmail::GeneratedAssociationMethods
    extend ActionMailbox::InboundEmail::GeneratedRelationMethods
  end
end

module ActionMailbox::InboundEmail::GeneratedAssociationMethods
  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def build_raw_email_attachment(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def build_raw_email_blob(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def create_raw_email_attachment(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def create_raw_email_attachment!(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def create_raw_email_blob(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def create_raw_email_blob!(*args, &blk); end

  sig { returns(T.nilable(T.untyped)) }
  def raw_email_attachment; end

  sig { params(value: T.nilable(T.untyped)).void }
  def raw_email_attachment=(value); end

  sig { returns(T.nilable(T.untyped)) }
  def raw_email_blob; end

  sig { params(value: T.nilable(T.untyped)).void }
  def raw_email_blob=(value); end

  sig { returns(T.nilable(T.untyped)) }
  def reload_raw_email_attachment; end

  sig { returns(T.nilable(T.untyped)) }
  def reload_raw_email_blob; end
end

module ActionMailbox::InboundEmail::GeneratedRelationMethods
  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def bounced(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def delivered(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def failed(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def not_bounced(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def not_delivered(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def not_failed(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def not_pending(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def not_processing(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def pending(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def processing(*args, &blk); end

  sig { params(args: T.untyped, blk: T.untyped).returns(T.untyped) }
  def with_attached_raw_email(*args, &blk); end
end